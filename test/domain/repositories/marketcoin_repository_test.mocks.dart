// Mocks generated by Mockito 5.3.2 from annotations
// in betterhodl_flutter/test/domain/repositories/marketcoin_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:betterhodl_flutter/data/services/rest_service/rest_service_v2.dart'
    as _i4;
import 'package:betterhodl_flutter/data/services/socket_service/socket_service_v2.dart'
    as _i6;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:web_socket_channel/web_socket_channel.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketChannel_1 extends _i1.SmartFake
    implements _i3.WebSocketChannel {
  _FakeWebSocketChannel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestServiceV2].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestServiceV2 extends _i1.Mock implements _i4.RestServiceV2 {
  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i5.Future<T> get<T>(String? url) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
        ),
        returnValue: _i5.Future<T>.value(null),
        returnValueForMissingStub: _i5.Future<T>.value(null),
      ) as _i5.Future<T>);
}

/// A class which mocks [SocketServiceV2].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocketServiceV2 extends _i1.Mock implements _i6.SocketServiceV2 {
  @override
  _i3.WebSocketChannel get channel => (super.noSuchMethod(
        Invocation.getter(#channel),
        returnValue: _FakeWebSocketChannel_1(
          this,
          Invocation.getter(#channel),
        ),
        returnValueForMissingStub: _FakeWebSocketChannel_1(
          this,
          Invocation.getter(#channel),
        ),
      ) as _i3.WebSocketChannel);
  @override
  set channel(_i3.WebSocketChannel? _channel) => super.noSuchMethod(
        Invocation.setter(
          #channel,
          _channel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Stream<T> connectAndListen<T>({required Uri? uri}) => (super.noSuchMethod(
        Invocation.method(
          #connectAndListen,
          [],
          {#uri: uri},
        ),
        returnValue: _i5.Stream<T>.empty(),
        returnValueForMissingStub: _i5.Stream<T>.empty(),
      ) as _i5.Stream<T>);
}
